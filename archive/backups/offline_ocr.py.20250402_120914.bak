#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import tempfile
from PIL import Image
import pytesseract

def extract_text_from_image(image_path):
    """使用Tesseract OCR提取图片文本"""
    
    # 确保图片路径存在  
    if not os.path.exists(image_path):
        print(f"错误: 图片不存在 - {image_path}")
        return None
    
    print(f"正在处理图片: {image_path}")
    
    try:
        # 打开图片
        image = Image.open(image_path)
        print(f"图片已打开, 模式: {image.mode}, 尺寸: {image.size}")
        
        # 转为RGB模式
        if image.mode != 'RGB':
            print(f"转换图片从 {image.mode} 到 RGB 模式")
            image = image.convert('RGB')
            
        # 保存为临时JPEG  
        temp_path = f"{image_path}_temp.jpg"
        image.save(temp_path, 'JPEG', quality=95)
        print(f"已创建临时JPEG文件: {temp_path}")
        
        # 使用pytesseract进行OCR
        print("使用Tesseract OCR进行文本识别...")
        
        # 中文识别，需要指定语言参数
        text = pytesseract.image_to_string(Image.open(temp_path), lang='chi_sim+eng')
        
        print("-" * 50)
        print("提取的文本:")
        print("-" * 50)
        print(text)
        print("-" * 50)
        
        # 清理临时文件
        try:
            os.remove(temp_path)
            print(f"已删除临时文件: {temp_path}")
        except:
            pass
            
        return text
        
    except Exception as e:
        print(f"错误: {str(e)}")
        return None

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("用法: python offline_ocr.py <图片路径>")
        sys.exit(1)
        
    image_path = sys.argv[1]
    result = extract_text_from_image(image_path)
    
    if result:
        print("OCR处理成功!")
    else:
        print("OCR处理失败!") 